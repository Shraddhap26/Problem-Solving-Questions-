#include <iostream>
using namespace std;
void merge(int *arr,int s,int e){
    int mid=(s+e)/2;
    int len1= mid-s+1;
    int len2= e-mid;
    
    int *first = new int[len1];
    int *second = new int[len2];
    //copying
    int mainarrayindex=s;
    for(int i=0;i<len1;i++){
        first[i]=arr[mainarrayindex++];
    }
    
    mainarrayindex=mid+1;
    for(int i=0;i<len2;i++){
        second[i]=arr[mainarrayindex++];
    }
    //merge 2 sorted array
    int index1=0;
    int index2=0;
    mainarrayindex=s;
    while(index1<len1 && index2<len2){
        if(first[index1]<second[index2]){
           arr[mainarrayindex++]=first[index1++]; 
        }else{
           arr[mainarrayindex++]=second[index2++]; 
        }
    }
    
     while(index1<len1){
        arr[mainarrayindex++]=first[index1++];   
     }
     while(index2<len2){
        arr[mainarrayindex++]=second[index2++];   
     }
  }


void mergesort(int *arr,int s,int e){
    if(s>=e){
        return;
    }
    int mid=(s+e)/2;
    
    //for left part
    mergesort(arr,s,mid);
    
    //for right part
    mergesort(arr,mid+1,e);
    
    //merge 
    merge(arr,s,e);
  
}
int main(){
    int arr[15]={10,20,19,12,1,23,45,79,60,50};
    int n=10;
    mergesort(arr,0,n-1);
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
    return 0;
}

Output : 1 10 12 19 20 23 45 50 60 79 
