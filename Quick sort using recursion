#include <iostream>
using namespace std;
int partition(int arr[],int s,int e){
    int pivot=arr[s];
    int count=0;
   for(int i=s+1;i<=e;i++){
       if(arr[i]<=pivot){
           count++;
       }
   }
   int pivotindex=count+s;
   swap(arr[s],arr[pivotindex]);
   int i=s,j=e;
   while(i<pivotindex && j>pivotindex){
       while(arr[i]<pivot)
       {
           i++;
       }
        while(arr[j]>pivot)
       {
           j--;
       }
   if(i<pivotindex && j>pivotindex){
       swap(arr[i],arr[j]);
   }
   }
   return pivotindex;
}
void quicksort(int arr[],int s ,int e){
    //base case
    if(s>=e){
        return;
    }
    //for partition
    int pos=partition(arr,s,e);
    
    //sort left part
    quicksort(arr,s,pos-1);
    // //sort right part
    quicksort(arr,pos+1,e);
}
int main() {
   
   cout <<"Quick Sort:  ";
   int arr[5]={45,23,59,27,20};
   int n=5;
   quicksort(arr,0,n-1);
    for(int i=0;i<n;i++){
       cout<<arr[i]<<" ";
   }
  
    return 0;
}

Output :
Quick Sort:  20 23 27 45 59 
